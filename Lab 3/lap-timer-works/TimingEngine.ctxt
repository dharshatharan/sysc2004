#BlueJ class context
comment0.target=TimingEngine()
comment0.text=\nCreate\ a\ TimingEngine\ object.\ The\ object\ will\ be\ initialised\ at\ 0,\nstatus\ is\ "Stopped",\ ready\ to\ start\ timing.\ The\ default\ lap\ length\nis\ 400m.\n\n
comment1.target=void\ startLap()
comment1.text=\nInstruct\ the\ timer\ to\ start\ timing\ a\ lap.\nIf\ we\ were\ not\ timing\ before,\ this\ starts\ the\ timer\ for\ a\ new\ \nrun.\ If\ we\ were\ already\ timing,\ this\ starts\ a\ new\ lap,\ adding\ the\ncurrent\ lap\ time\ to\ the\ total.\n\n
comment10.params=length
comment10.target=void\ setLapLength(int)
comment10.text=\nSet\ the\ length\ of\ a\ lap.\n\n
comment11.target=void\ finishLap()
comment11.text=\nPrivate\ method\ called\ whenever\ a\ lap\ is\ finished.\ Thsi\ method\nupdates\ the\ statistics.\n\n
comment12.params=time
comment12.target=String\ timeToString(long)
comment12.text=\nConvert\ a\ time\ interval\ in\ milli-seconds\ into\ a\ String\ in\ the\nformat\ "m\:ss\:hh".\n\n
comment13.params=number
comment13.target=String\ twoDigit(long)
comment13.text=\nConvert\ a\ number\ into\ a\ two-digit\ String\ representation.\n\n
comment14.target=long\ getSystemTime()
comment14.text=\nReturn\ the\ current\ time\ of\ the\ system\ clock\ (in\ milli-seconds).\n\n
comment2.target=void\ stop()
comment2.text=\nStop\ timing.\ Add\ the\ current\ lap\ time\ to\ the\ total,\ and\ set\nthe\ timer\ into\ idle\ mode\ (waiting\ for\ a\ new\ run).\n\n
comment3.target=String\ getStatus()
comment3.text=\nReturn\ the\ current\ status\ of\ the\ timer.\ The\ status\ is\ one\ of\ the\ntwo\ Strings\ "Timing..."\ or\ "Stopped",\ indicating\ whether\ this\ \ntimer\ is\ currently\ running\ or\ stopped.\n\n
comment4.target=int\ getLapCount()
comment4.text=\nReturn\ the\ number\ of\ laps\ completed\ in\ this\ run.\n\n
comment5.target=String\ getLastTime()
comment5.text=\nReturn\ the\ time\ of\ the\ last\ lap\ completed.\nThe\ result\ is\ a\ string\ in\ the\ format\ "m\:ss\:hh",\ where\ m\ is\nthe\ number\ of\ minutes,\ ss\ the\ number\ of\ seconds,\ and\ hh\ the\ number\nof\ hundredths\ of\ a\ second.\ For\ example\ "7\:02\:43".\n\n
comment6.target=String\ getAverageTime()
comment6.text=\nReturn\ the\ average\ time\ for\ a\ lap\ in\ this\ run.\nThe\ result\ is\ a\ string\ in\ the\ format\ "m\:ss\:hh".\n\n
comment7.target=String\ getTotalTime()
comment7.text=\nReturn\ the\ total\ time\ of\ the\ last\ or\ current\ run.\nThe\ result\ is\ a\ string\ in\ the\ format\ "m\:ss\:hh".\n\n
comment8.target=String\ getAverageSpeed()
comment8.text=\nReturn\ the\ average\ speed\ in\ this\ run\ in\ meters\ per\ second.\nThe\ result\ is\ a\ string\ such\ as\ "73\ m/s".\n\n
comment9.target=int\ getLapLength()
comment9.text=\nReturn\ the\ length\ of\ a\ lap.\n\n
numComments=15
