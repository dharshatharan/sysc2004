#BlueJ class context
comment0.target=Room
comment0.text=\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\n\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ \n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\n\ @version\ 2006.03.30\n\ \n\ @author\ Lynn\ Marshall\ \n\ @version\ A3\ Solution\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\n\ "an\ open\ court\ yard".\n\ \n\ @param\ description\ The\ room's\ description.\n
comment10.params=
comment10.target=java.lang.String\ getItems()
comment10.text=\n\ Return\ a\ String\ representing\ the\ items\ in\ the\ room,\ one\ per\ line.\n\ Note\:\ This\ method\ is\ optional\ and\ the\ functionality\ may\ be\ combined\n\ into\ getLongDescription.\n\ \n\ @return\ A\ String\ of\ the\ items,\ one\ per\ line\n
comment2.params=item
comment2.target=void\ addItem(Item)
comment2.text=\n\ Add\ an\ item\ to\ the\ room,\ best\ to\ check\ that\ it's\ not\ null.\n\ \n\ @param\ item\ The\ item\ to\ add\ to\ the\ room\n
comment3.params=direction\ neighbour
comment3.target=void\ setExit(java.lang.String,\ Room)
comment3.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ \n\ @param\ direction\ The\ direction\ of\ the\ exit\n\ @param\ neighbour\ The\ room\ to\ which\ the\ exit\ leads\n
comment4.params=
comment4.target=java.lang.String\ getShortDescription()
comment4.text=\n\ Returns\ a\ short\ description\ of\ the\ room,\ i.e.\ the\ one\ that\n\ was\ defined\ in\ the\ constructor\n\ \n\ @return\ The\ short\ description\ of\ the\ room\n
comment5.params=
comment5.target=java.lang.String\ getLongDescription()
comment5.text=\n\ Return\ a\ long\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ north\ west\n\ \ \ \ \ Items\:\ \n\ \ \ \ \ \ \ \ a\ chair\ weighing\ 5\ kgs.\n\ \ \ \ \ \ \ \ a\ table\ weighing\ 10\ kgs.\n\ \ \ \ \ \n\ @return\ A\ long\ description\ of\ this\ room\n
comment6.params=
comment6.target=java.lang.String\ getExitString()
comment6.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ \n\ @return\ Details\ of\ the\ room's\ exits\n
comment7.params=direction
comment7.target=Room\ getExit(java.lang.String)
comment7.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ \n\ @param\ direction\ The\ exit's\ direction\n\ @return\ The\ room\ in\ the\ given\ direction\n
comment8.params=item
comment8.target=Item\ takeItem(java.lang.String)
comment9.params=item
comment9.target=void\ dropItem(Item)
numComments=11
